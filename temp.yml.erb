---
apiVersion: extensions/v1beta1
kind: ReplicaSet
metadata:
  labels:
    app: hello-cloud
    name: bare-replica-set
  name: bare-replica-set
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-cloud
      name: bare-replica-set
  template:
    metadata:
      labels:
        app: hello-cloud
        name: bare-replica-set
    spec:
      containers:
      - name: app
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["tail", "-f", "/dev/null"]
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hello-cloud-configmap-data
  labels:
    name: hello-cloud-configmap-data
    app: hello-cloud
data:
  datapoint1: value1
  datapoint2: value2
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: ds-app
spec:
  template:
    metadata:
      labels:
        app: hello-cloud
        name: ds-app
    spec:
      containers:
      - name: app
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["tail", "-f", "/dev/null"]
        ports:
        - containerPort: 80
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: test
spec:
  minAvailable: 2
  selector:
    matchLabels:
      name: web
      app: hello-cloud
---
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-job
  labels:
    name: hello-job
    app: hello-cloud
spec:
  template:
    spec:
      containers:
      - name: my-job-container
        image: busybox
        imagePullPolicy: IfNotPresent
        args: ["echo", "hello", "world"]
      restartPolicy: Never
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all-network-policy
spec:
  podSelector: {}
  ingress:
    - {}
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    name: redis
    app: hello-cloud
spec:
  ports:
  - port: 6379
    targetPort: redis
  selector:
    name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis-external
  labels:
    name: redis-external
    app: hello-cloud
spec:
  externalName: external-redis.shopify
  type: ExternalName
---
apiVersion: v1
kind: Endpoints
metadata:
  name: redis-endpoints
subsets:
  - addresses:
      - ip: 10.1.1.1
      - ip: 10.1.1.2
    ports:
      - name: redis
        port: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-endpoints
spec:
  clusterIP: None
  ports:
    - name: redis
      port: 6379
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: hello-cloud-redis
  labels:
    name: redis
    app: hello-cloud
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100M
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  progressDeadlineSeconds: 60
  template:
    metadata:
      labels:
        name: redis
        app: hello-cloud
    spec:
      containers:
      - name: master
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["tail", "-f", "/dev/null"]
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - mountPath: /data
          name: redis-data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: hello-cloud-redis
---
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: build-robot
---
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role
rules: []
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: resource-quotas
spec:
  hard:
    persistentvolumeclaims: 10
---
apiVersion: v1
kind: Secret
metadata:
  name: hello-secret
type: Opaque
data:
  username: YWRtaW4=
  password: cGFzc3dvcmQ=
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: build-robot
automountServiceAccountToken: false
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: stateful-busybox
spec:
  serviceName: "stateful-busybox"
  replicas: 2
  template:
    metadata:
      labels:
        app: hello-cloud
        name: stateful-busybox
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: app
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["tail", "-f", "/dev/null"]
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: PodTemplate
metadata:
  name: hello-cloud-template-runner
  labels:
    name: hello-cloud-template-runner
    app: hello-cloud
template:
  metadata:
    name: task-runner
    labels:
      name: runner
      app: hello-cloud
  spec:
    restartPolicy: Never
    containers:
    - name: task-runner
      image: busybox
      imagePullPolicy: IfNotPresent
      command: ["sh", "-c", "echo 'Hello from the command runner!' && test 1 -eq 1"]
      env:
      - name: CONFIG
        valueFrom:
          configMapKeyRef:
            name: hello-cloud-configmap-data
            key: datapoint1
---
apiVersion: v1
kind: Pod
metadata:
  name: unmanaged-pod-<%= deployment_id %>
  annotations:
    kubernetes-deploy.shopify.io/timeout-override: "60s"
  labels:
    type: unmanaged-pod
    name: unmanaged-pod-<%= deployment_id %>
    app: hello-cloud
spec:
  activeDeadlineSeconds: 60
  restartPolicy: Never
  containers:
    - name: hello-cloud
      image: busybox
      imagePullPolicy: IfNotPresent
      command: ["sh", "-c", "echo 'Hello from the command runner!' && test 1 -eq 1"]
      env:
      - name: CONFIG
        valueFrom:
          configMapKeyRef:
            name: hello-cloud-configmap-data
            key: datapoint2
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web
  labels:
    name: web
    app: hello-cloud
spec:
  rules:
  - host: hello-cloud.example.com
    http:
      paths:
      - backend:
          serviceName: web
          servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    name: web
    app: hello-cloud
spec:
  ports:
  - port: 80
    name: http
    targetPort: http
  selector:
    name: web
    app: hello-cloud
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: web
  annotations:
    shipit.shopify.io/restart: "true"
spec:
  replicas: 1
  progressDeadlineSeconds: 60
  template:
    metadata:
      labels:
        name: web
        app: hello-cloud
    spec:
      containers:
      - name: app
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["tail", "-f", "/dev/null"]
        ports:
        - containerPort: 80
          name: http
        env:
        - name: GITHUB_REV
          value: "<%= current_sha %>"
        - name: CONFIG
          valueFrom:
            configMapKeyRef:
              name: hello-cloud-configmap-data
              key: datapoint1
      - name: sidecar
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["tail", "-f", "/dev/null"]
---
