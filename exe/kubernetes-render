#!/usr/bin/env ruby
# frozen_string_literal: true

require 'krane/render_task'
require 'krane/options_helper'
require 'krane/bindings_parser'

require 'optparse'

template_dir = []
bindings = {}

ARGV.options do |opts|
  parser = KubernetesDeploy::BindingsParser.new
  opts.on("--bindings=BINDINGS", "Expose additional variables to ERB templates " \
    "(format: k1=v1,k2=v2, JSON string or file (JSON or YAML) path prefixed by '@')") { |b| parser.add(b) }
  opts.on("--template-dir=DIR", "Set the template dir (default: config/deploy/$ENVIRONMENT).") do |d|
    template_dir = [d]
  end
  opts.parse!
  bindings = parser.parse
end

templates = ARGV
logger = KubernetesDeploy::FormattedLogger.build(verbose_prefix: false)

begin
  KubernetesDeploy::OptionsHelper.with_processed_template_paths(template_dir) do |dir|
    runner = KubernetesDeploy::RenderTask.new(
      current_sha: ENV["REVISION"],
      template_dir: dir.first,
      bindings: bindings,
    )

    success = runner.run(STDOUT, templates)
    exit(1) unless success
  end
rescue KubernetesDeploy::OptionsHelper::OptionsError => e
  logger.error(e.message)
  exit(1)
end
